{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Store =\n/*#__PURE__*/\nfunction () {\n  function Store() {\n    _classCallCheck(this, Store);\n\n    _defineProperty(this, \"subscribers\", []);\n\n    _defineProperty(this, \"items\", []);\n  }\n\n  _createClass(Store, [{\n    key: \"subscribe\",\n    value: function subscribe(cb) {\n      this.subscribers.push(cb);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(cb) {\n      this.subscribers = this.subscribers.filter(function (subscriber) {\n        return subscriber !== cb ? subscriber : undefined;\n      });\n    }\n  }, {\n    key: \"notify\",\n    value: function notify() {\n      this.subscribers.forEach(function (subscriber) {\n        return subscriber();\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      this.items.push(item);\n      this.notify();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      this.items = this.items.filter(function (storeItem) {\n        return storeItem !== item ? storeItem : undefined;\n      });\n      this.notify();\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.items;\n    }\n  }]);\n\n  return Store;\n}();\n\nvar _default = Store;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}