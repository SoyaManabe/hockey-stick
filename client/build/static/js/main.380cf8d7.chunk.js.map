{"version":3,"sources":["logo.svg","Home.js","Intro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Chart","props","width","height","data","datas","stackOffset","margin","top","right","left","bottom","strokeDasharray","dataKey","verticalAlign","stroke","y","stackId","fill","RenderPrice","console","log","map","id","arr","length","total","Home","state","sums","serverRequest","bind","$","get","res","setState","this","className","React","Component","Intro","App","items","activeArray","page","clickHeader","name","Container","style","marginTop","ItemTable","Header","onClick","item","Item","key","date","category","price","Export","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,0NCwC3C,SAASC,EAAMC,GACb,OACE,kBAAC,IAAD,CAAqBC,MAAM,MAAMC,OAAQ,KACvC,kBAAC,IAAD,CACEC,KAAMH,EAAMI,MACZC,YAAY,OACZC,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvC,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQC,cAAc,QAAQX,OAAQ,GAAIY,OAAO,YACjD,kBAAC,IAAD,CAAeC,EAAG,EAAGD,OAAO,SAC5B,kBAAC,IAAD,CAAOF,QAAQ,OAAOV,OAAQ,GAAIY,OAAO,YACzC,kBAAC,IAAD,CAAKF,QAAQ,QAAQI,QAAQ,IAAIC,KAAK,YACtC,kBAAC,IAAD,CAAKL,QAAQ,OAAOI,QAAQ,IAAIC,KAAK,YACrC,kBAAC,IAAD,CAAKL,QAAQ,QAAQK,KAAK,cAKlC,SAASC,EAAYlB,GAEnB,OADAmB,QAAQC,IAAIpB,EAAMI,OAEhB,6BACA,0CACCJ,EAAMI,MAAMiB,KAAI,SAAClB,EAAMmB,EAAIC,GAAX,OACfD,GAAMC,EAAIC,OAAO,GACf,mCAAMrB,EAAKsB,WAKJC,M,YApEb,WAAY1B,GAAQ,IAAD,8BACjB,4CAAMA,KACD2B,MAAQ,CACXC,KAAM,IAER,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALJ,E,6EAOH,IAAD,OACbC,IAAEC,IAAI,uCAAuC,SAAAC,GAC3Cd,QAAQC,IAAIa,GACZ,EAAKC,SAAS,CACZN,KAAMK,S,0CAKVE,KAAKN,kB,+BAGL,OACE,yBAAKO,UAAU,qBACb,yBAAKA,UAAU,gBACb,4CAEF,yBAAKA,UAAU,gBACb,kBAACrC,EAAD,CAAOqC,UAAU,SAAShC,MAAO+B,KAAKR,MAAMC,OAC5C,kBAACV,EAAD,CAAakB,UAAU,SAAShC,MAAO+B,KAAKR,MAAMC,a,GA3BzCS,IAAMC,WCqBVC,G,mBArBb,WAAYvC,GAAQ,qEACZA,I,sEAGN,OACE,6BACE,yBAAKoC,UAAU,eACf,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,aAAd,gBACA,6DAEF,yBAAKA,UAAU,eACf,yBAAKA,UAAU,qB,GAdLC,IAAMC,Y,SCIpBE,E,YACJ,WAAYxC,GAAQ,IAAD,8BACjB,4CAAMA,KACD2B,MAAQ,CACXc,MAAO,GACPC,YAAY,CAAC,GAAG,SAAS,GAAG,IAC5BC,KAAK,GAEP,EAAKC,YAAc,EAAKA,YAAYd,KAAjB,gBACnB,EAAKD,cAAgB,EAAKA,cAAcC,KAAnB,gBARJ,E,yEAUPR,GACV,IAAIC,EAAM,CAAC,GAAG,GAAG,GAAG,IACpBA,EAAID,GAAM,SACVa,KAAKD,SAAS,CAACS,KAAKrB,IACpBa,KAAKD,SAAS,CAACQ,YAAYnB,IAC3BJ,QAAQC,IAAIE,EAAGC,EAAID,M,sCAEL,IAAD,OACbS,IAAEC,IAAI,wCAAwC,SAAAC,GAC5Cd,QAAQC,IAAIa,GACZ,EAAKC,SAAS,CACZO,MAAOR,IACP,WACAd,QAAQC,IAAI,EAAKO,MAAMc,MAAM,GAAGI,c,0CAKpCV,KAAKN,gBACLV,QAAQC,IAAIe,KAAKR,MAAMc,MAAM,M,+BAG7B,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,CAAQQ,YAAaT,KAAKS,YAAarB,IAAKY,KAAKR,MAAMe,cACvD,kBAACI,EAAA,EAAD,CAAWC,MAAO,CAACC,UAAU,QAC7B,6BACsB,GAAnBb,KAAKR,MAAMgB,MAAa,kBAAC,EAAD,MACL,GAAnBR,KAAKR,MAAMgB,MAAa,kBAAC,EAAD,MACL,GAAnBR,KAAKR,MAAMgB,MAAa,kBAACM,EAAD,CAAWR,MAAON,KAAKR,MAAMc,QAClC,GAAnBN,KAAKR,MAAMgB,MAAa,kBAAC,EAAD,a,GAzCjBN,IAAMC,WAiDlBY,E,YACJ,WAAYlD,GAAQ,qEACZA,I,sEAEE,IAAD,OACP,OACE,yBAAKoC,UAAU,8BACb,yBAAKA,UAAU,gBACb,uBAAGd,GAAM,EAAGc,UAAU,cACpBe,QAAS,kBAAM,EAAKnD,MAAM4C,YAAY,KADxC,gBAIA,uBAAGtB,GAAM,EAAGc,UAAYD,KAAKnC,MAAMuB,IAAI,GAAM,QAC3C4B,QAAS,kBAAM,EAAKnD,MAAM4C,YAAY,KADxC,QAEA,uBAAGtB,GAAM,EAAGc,UAAYD,KAAKnC,MAAMuB,IAAI,GAAM,QAC3C4B,QAAS,kBAAM,EAAKnD,MAAM4C,YAAY,KADxC,QAEA,uBAAGtB,GAAM,EAAGc,UAAYD,KAAKnC,MAAMuB,IAAI,GAAM,QAC3C4B,QAAS,kBAAM,EAAKnD,MAAM4C,YAAY,KADxC,gB,GAhBWP,IAAMC,WAwB3B,SAASW,EAAUjD,GACjB,OACE,yBAAKoC,UAAU,gBACb,2BAAOA,UAAU,8BACf,+BACE,4BACE,oCACA,oCACA,wCACA,uCAGJ,+BACGpC,EAAMyC,MAAMpB,KAAI,SAAA+B,GAAI,OACnB,kBAACC,EAAD,CAAMD,KAAMA,UAQxB,SAASC,EAAKrD,GACZ,OACE,wBAAIsD,IAAKtD,EAAMoD,KAAK9B,IAClB,4BAAKtB,EAAMoD,KAAKG,MAChB,4BAAKvD,EAAMoD,KAAKP,MAChB,4BAAK7C,EAAMoD,KAAKI,UAChB,mCAAMxD,EAAMoD,KAAKK,Q,IAKjBC,E,YACJ,WAAY1D,GAAQ,qEACZA,I,sEAGN,OACE,6E,GANeqC,IAAMC,WAUZE,IClHKmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SD2H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.380cf8d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import $ from 'jquery';\nimport React from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sums: [],\n    };\n    this.serverRequest = this.serverRequest.bind(this);\n  }\n  serverRequest(){\n    $.get(\"http://localhost:5000/api/logs/sums\", res => {\n      console.log(res);\n      this.setState({\n        sums: res\n      });\n    });\n  }\n  componentDidMount(){\n    this.serverRequest();\n  }\n  render() {\n    return (\n      <div className=\"ui grid container\">\n        <div className=\"row centered\">\n          <h1>Hello, Soya</h1>\n        </div>\n        <div className=\"row centered\">\n          <Chart className=\"column\" datas={this.state.sums}/>\n          <RenderPrice className=\"column\" datas={this.state.sums}/>\n        </div>\n      </div>\n    )\n  }\n}\nfunction Chart(props) {\n  return (\n    <ResponsiveContainer width=\"70%\" height={300}>\n      <BarChart\n        data={props.datas}\n        stackOffset=\"sign\"\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend verticalAlign=\"price\" height={30} stroke=\"#8884d8\" />\n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Brush dataKey=\"date\" height={30} stroke=\"#8884d8\" />\n        <Bar dataKey=\"price\" stackId=\"a\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"diff\" stackId=\"a\" fill=\"#8884d8\" />\n        <Bar dataKey=\"total\" fill=\"#ffc658\" />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\nfunction RenderPrice(props) {\n  console.log(props.datas);\n  return (\n    <div>\n    <h2>Total earn</h2>\n    {props.datas.map((data, id, arr) => (\n      id == arr.length-1 && \n        <h2>Â¥{data.total}</h2>\n    ))}\n    </div>\n  )\n}\nexport default Home; \n","import $ from 'jquery';\nimport React from 'react';\nimport './Intro.css';\n\nimport { Container } from \"semantic-ui-react\"\n\nclass Intro extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <div>\n        <div className=\"toppadding\"></div>\n        <div className=\"ui vertical masthead center aligned segment\">\n          <div className=\"ui text container\">\n            <h1 className=\"ui header\">Hockey Stick</h1>\n            <h2>Empower your cost experience</h2>\n          </div>\n          <div className=\"toppadding\"></div>\n          <div className=\"ui divider\"></div>\n        </div>\n\n      </div>\n    )\n  } \n}\n\nexport default Intro;\n","import $ from 'jquery';\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\nimport Intro from './Intro';\n\nimport { Container } from \"semantic-ui-react\"\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      activeArray:[\"\",\"active\",\"\",\"\"],\n      page:1,\n    };\n    this.clickHeader = this.clickHeader.bind(this);\n    this.serverRequest = this.serverRequest.bind(this);\n  }\n  clickHeader(id){\n    var arr = [\"\",\"\",\"\",\"\"]\n    arr[id] = \"active\"\n    this.setState({page:id})\n    this.setState({activeArray:arr})\n    console.log(id,arr[id])\n  }\n  serverRequest(){\n    $.get(\"http://localhost:5000/api/logs/items\", res => {\n      console.log(res);\n      this.setState({\n        items: res\n      },()=>{\n        console.log(this.state.items[0].name)\n      });\n    });\n  }\n  componentDidMount(){\n    this.serverRequest();\n    console.log(this.state.items[2])\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header clickHeader={this.clickHeader} arr={this.state.activeArray}/>\n        <Container style={{marginTop:\"5em\"}}>\n        <div>\n          {this.state.page == 0 && <Intro/>}\n          {this.state.page == 1 && <Home/>}\n          {this.state.page == 2 && <ItemTable items={this.state.items}/>}\n          {this.state.page == 3 && <Export/>}\n        </div>\n        </Container>\n      </div>  \n    )\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <div className=\"ui inverted top fixed menu\">\n        <div className=\"ui container\">\n          <a id = {0} className=\"header item\"\n            onClick={() => this.props.clickHeader(0)}>\n            Hockey Stick\n          </a>\n          <a id = {1} className={(this.props.arr[1]) + ' ' + 'item'}\n            onClick={() => this.props.clickHeader(1)}>Home</a>\n          <a id = {2} className={(this.props.arr[2]) + ' ' + 'item'} \n            onClick={() => this.props.clickHeader(2)}>Logs</a>\n          <a id = {3} className={(this.props.arr[3]) + ' ' + 'item'}\n            onClick={() => this.props.clickHeader(3)}>Export</a>\n        </div>  \n      </div>\n    )\n  }\n}\n\nfunction ItemTable(props) {\n  return (\n    <div className=\"ui container\">\n      <table className=\"ui selectable celled table\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Name</th>\n            <th>Category</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.items.map(item => (\n            <Item item={item}/>\n          ))}\n        </tbody>\n      </table>\n    </div>  \n  )\n}\n\nfunction Item(props) {\n  return (\n    <tr key={props.item.id}>\n      <td>{props.item.date}</td>\n      <td>{props.item.name}</td>\n      <td>{props.item.category}</td>\n      <td>Â¥{props.item.price}</td>\n    </tr>\n  )\n}\n\nclass Export extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <h1>Here is Export page but not developed yet</h1>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}